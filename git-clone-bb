#!/usr/bin/env bash
#
# DESCRIPTION
#   Clone all Bitbucket repositories for a given project.
#
# USAGE
#   git-clone-bb [OPTIONS] PROJECT_KEY CREDENTIALS
#
# ARGUMENTS
#   PROJECT_KEY    Project key for the repository
#   CREDENTIALS    Basic auth credentials
#
# OPTIONS
#   -h, --help    Show this help message
#
# EXAMPLES
#   git-clone-bb ABC xxxxxxxxxx

# Colors
red='\033[0;31m'
reset='\033[0m'

# Print usage information.
function usage() {
  echo "usage: git-clone-bb [OPTIONS] PROJECT_KEY CREDENTIALS"
  echo ""
  echo "Arguments:"
  echo "  PROJECT_KEY    Project key for the repository"
  echo "  CREDENTIALS    Basic auth credentials"
  echo ""
  echo "Options:"
  echo "  -h, --help    Show this help message"
  echo ""
}

project_key=""
credentials=""

# Parse command line arguments.
while [[ $# -gt 0 ]]; do
  case $1 in
    -h | --help)
      usage
      exit 0
      ;;
    -*)
      echo "Unknown option: $1" >&2
      usage
      exit 1
      ;;
    *)
      if [ -z "${project_key}" ]; then
        project_key="$1"
      elif [ -z "${credentials}" ]; then
        credentials="$1"
      else
        echo "Too many arguments: $1" >&2
        usage
        exit 1
      fi
      shift
      ;;
  esac
done

if [ -z "${project_key}" ]; then
  echo -e "${red}ERROR: Must specify a project key.${reset}" >&2
  usage
  exit 1
fi

if [ -z "${credentials}" ]; then
  echo -e "${red}ERROR: Must provide basic auth credentials.${reset}" >&2
  usage
  exit 1
fi

resource="https://bitbucket.dwolla.net/rest/api/1.0/projects/${project_key}/repos?limit=2048"

mapfile -t ssh_urls <<EOF_SSH_URLS
$(curl -s -X GET \
  -H "Authorization: Basic ${credentials}" \
  -H "Content-Type: application/json" \
  "${resource}" |
  jq -r '.values[].links.clone[] | select(.name == "ssh") | .href')
EOF_SSH_URLS

for ssh_url in "${ssh_urls[@]}"; do
  echo Cloning "${ssh_url}"...
  output=$(git clone "${ssh_url}" 2>&1)
  if echo "${output}" | grep -qi "already exists"; then
    echo -e "${red}Repository already exists.${reset}"
  fi
done
