#!/usr/bin/env bash
#
# DESCRIPTION
#   Remove all Python artifacts in a given directory.
#
# USAGE
#   python-clean [OPTIONS] [DIR]
#
# ARGUMENTS
#   DIR    Directory to use (optional, defaults to current directory)
#
# OPTIONS
#   -h, --help    Show this help message
#
# EXAMPLES
#   None

# Colors
red='\033[0;31m'
reset='\033[0m'

# Print usage information.
function usage() {
  echo "usage: python-clean [OPTIONS] [DIR]"
  echo ""
  echo "Arguments:"
  echo "  DIR    Directory to use (optional, defaults to current directory)"
  echo ""
  echo "Options:"
  echo "  -h, --help    Show this help message"
  echo ""
}

dir=""

# Parse command line arguments.
while [[ $# -gt 0 ]]; do
  case $1 in
    -h|--help) usage; exit 0 ;;
    -*) echo "Unknown option: $1" >&2; usage; exit 1 ;;
    *) dir="$1"; shift; break ;;
  esac
done

if [ -z "${dir}" ]; then
  dir="$(pwd)"
else
  if [ ! -e "${dir}" ]; then
    echo -e "${red}ERROR: ${dir} does not exist.${reset}" >&2
    exit 1
  fi
fi

function python_clean() {
  # Remove build artifacts.
  find . -name '*.egg' -exec rm -fr {} +
  find . -name '*.egg-info' -exec rm -fr {} +
  rm -fr .eggs/
  rm -fr build/
  rm -fr dist/
  # Remove Python artifacts.
  find . -name '*.pyc' -exec rm -f {} +
  find . -name '*.pyo' -exec rm -f {} +
  find . -name '*~' -exec rm -f {} +
  find . -name '__pycache__' -exec rm -fr {} +
  # Remove test and coverage artifacts.
  find . -name '*,cover' -exec rm -f {} +
  find . -name '.coverage' -exec rm -f {} +
  find . -name '.pytest_cache' -exec rm -fr {} +
  find . -name 'cover' -exec rm -fr {} +
  find . -name 'coverage.xml' -exec rm -f {} +
  find . -name 'htmlcov' -exec rm -fr {} +
}

pushd "${dir}" >/dev/null || exit
python_clean
popd >/dev/null || exit
