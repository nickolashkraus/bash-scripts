#!/usr/bin/env bash
#
# DESCRIPTION
#   Set user.name, user.email, and remote host for each repository in the
#   current directory.
#
#   The remote host can be used in conjunction with an SSH configuration file
#   in order to manage multiple GitHub identities.
#
#     .ssh/config
#
#     # nickolaskraus-wf
#     Host workiva.github.com
#     HostName github.com
#     PreferredAuthentications publickey
#     IdentityFile ~/.ssh/id_rsa_workiva
#
# USAGE
#   git-config-all [OPTIONS] USERNAME EMAIL HOST
#
# ARGUMENTS
#   USERNAME    Username to set
#   EMAIL       User email to set
#   HOST        Remote Host to set
#
# OPTIONS
#   -h, --help    Show this help message
#
# EXAMPLES
#   git-config-all 'Nickolas Kraus' 'Nickolas.Kraus@workiva.com' 'workiva.github.com'

# Print usage information.
function usage() {
  echo "usage: $0 [OPTIONS] USERNAME EMAIL HOST"
  echo ""
  echo "Arguments:"
  echo "  USERNAME    Username to set"
  echo "  EMAIL       User email to set"
  echo "  HOST        Remote Host to set"
  echo ""
  echo "Options:"
  echo "  -h, --help    Show this help message"
  echo ""
}

user_name=""
user_email=""
host=""

# Parse command line arguments.
while [[ $# -gt 0 ]]; do
  case $1 in
    -h|--help) usage; exit 0 ;;
    -*) echo "Unknown option: $1" >&2; usage; exit 1 ;;
    *)
      if [ -z "${user_name}" ]; then
        user_name="$1"
      elif [ -z "${user_email}" ]; then
        user_email="$1"
      elif [ -z "${host}" ]; then
        host="$1"
      else
        echo "Too many arguments: $1" >&2; usage; exit 1
      fi
      shift ;;
  esac
done

if [ -z "${user_name}" ]; then
  echo -en "\033[0;31m"
  echo "ERROR: Must specify a user name." >&2
  echo -en "\033[0m"
  usage
  exit 1
fi

if [ -z "${user_email}" ]; then
  echo -en "\033[0;31m"
  echo "ERROR: Must specify a user email." >&2
  echo -en "\033[0m"
  usage
  exit 1
fi

if [ -z "${host}" ]; then
  echo -en "\033[0;31m"
  echo "ERROR: Must specify a remote host." >&2
  echo -en "\033[0m"
  usage
  exit 1
fi

for d in *; do \
  if [ -d "${d}" ]; then
    pushd "${d}" >/dev/null || exit
    git config user.name "${user_name}" && \
    git config user.email "${user_email}"
    orl_url="$(git remote get-url origin)"
    new_url=$(echo "${orl_url}" | gsed -E "s/@(.*):/@${host}:/")
    git remote set-url origin "${new_url}"
    popd >/dev/null || exit
  fi
done
