#!/usr/bin/env bash
#
# DESCRIPTION
#   Show the status for all Git repositories for a given directory.
#
# USAGE
#   git-status [OPTIONS] [DIR]
#
# ARGUMENTS
#   DIR    Directory to use (optional, defaults to current directory)
#
# OPTIONS
#   -h, --help    Show this help message
#
# EXAMPLES
#   None

# Colors
red='\033[0;31m'
green='\033[0;32m'
yellow='\033[0;33m'
reset='\033[0m'

# Print usage information.
function usage() {
  echo "usage: git-status [OPTIONS] [DIR]"
  echo ""
  echo "Arguments:"
  echo "  DIR    Directory to use (optional, defaults to current directory)"
  echo ""
  echo "Options:"
  echo "  -h, --help    Show this help message"
  echo ""
}

dir=""

# Parse command line arguments.
while [[ $# -gt 0 ]]; do
  case $1 in
    -h|--help) usage; exit 0 ;;
    -*) echo "Unknown option: $1" >&2; usage; exit 1 ;;
    *) dir="$1"; shift; break ;;
  esac
done

if [ -z "${dir}" ]; then
  dir="$(pwd)"
else
  if [ ! -e "${dir}" ]; then
    echo -e "${red}ERROR: ${dir} does not exist.${reset}" >&2
    exit 1
  fi
fi

for d in "${dir}"/*; do
  [ -d "${d}" ] || continue
  basename "${d}"
  if [ ! -d "${d}/.git" ]; then
    echo -e "${red}$(basename "${d}") is not a Git repository.${reset}"
    continue
  fi
  pushd "${d}" >/dev/null || exit
  output=$(git status 2>&1)
  if [[ "${output}" =~ modified ]]; then
    echo -e "${red}Modified files${reset}"
  elif [[ "${output}" =~ untracked ]]; then
    echo -e "${red}Untracked files${reset}"
  elif [[ "${output}" =~ ahead ]]; then
    echo -e "${yellow}Use \"git push\" to publish your local commits${reset}"
  else
    echo -e "${green}Working tree clean.${reset}"
  fi
  popd >/dev/null || exit
done
