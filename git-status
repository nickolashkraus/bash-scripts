#!/usr/bin/env bash
#
# DESCRIPTION
#   Show the status for all Git repositories for a given directory.
#
# USAGE
#   git-status [OPTIONS] [DIR]
#
# ARGUMENTS
#   DIR    Directory to use (optional, defaults to current directory)
#
# OPTIONS
#   -h, --help    Show this help message
#
# EXAMPLES
#   None

# Print usage information.
function usage() {
  echo "usage: $0 [OPTIONS] [DIR]"
  echo ""
  echo "Arguments:"
  echo "  DIR    Directory to use (optional, defaults to current directory)"
  echo ""
  echo "Options:"
  echo "  -h, --help    Show this help message"
  echo ""
}

dir=""

# Parse command line arguments.
while [[ $# -gt 0 ]]; do
  case $1 in
    -h|--help) usage; exit 0 ;;
    -*) echo "Unknown option: $1" >&2; usage; exit 1 ;;
    *) dir="$1"; shift; break ;;
  esac
done

if [ -z "${dir}" ]; then
  dir="$(pwd)"
else
  if [ ! -e "${dir}" ]; then
    echo -en "\033[0;31m"
    echo "${dir} does not exist."
    echo -en "\033[0m\n"
    exit 1
  fi
fi

for d in "${dir}"/*; do

  [ -d "${d}" ] || continue

  basename "${d}"

  if [ ! -d "${d}/.git" ]; then
    echo -en "\033[0;31m"
    echo "$(basename "${d}") is not a Git repository."
    echo -en "\033[0m"
    continue
  fi

  pushd "${d}" >/dev/null || exit

  output=$(git status 2>&1)

  if [[ "${output}" =~ modified ]]; then
    echo -en "\033[0;31m" # display red
    echo "Modified files"
    echo -en "\033[0m"
  elif [[ "${output}" =~ untracked ]]; then
    echo -en "\033[0;31m" # display red
    echo "Untracked files"
    echo -en "\033[0m"
  elif [[ "${output}" =~ ahead ]]; then
    echo -en "\033[0;33m" # display yellow
    echo "Use \"git push\" to publish your local commits"
    echo -en "\033[0m"
  else
    echo -en "\033[0;32m" # display green
    echo "Working tree clean."
    echo -en "\033[0m"
  fi

  popd >/dev/null || exit

done
