#!/bin/bash
#
# DESCRIPTION
# Clone all GitHub repositories for the specified user or organization.
#
# USAGE
#
#   git-clone-gh [-u, --user <user>] [-o, --org <org>]
#
# EXAMPLE
#
#   git-clone-gh -u NickolasHKraus
#
#   git-clone-gh -o Dwolla

function usage {
  echo 'usage: git-clone-gh [-u, --user <user>] [-o, --org <org>]'
  echo ''
  echo '  Options:'
  echo '    -u, --user: clone user repositories'
  echo '    -o, --org: clone organization repositories'
}

if [ -z "${1}" ]; then
	echo -en "\033[0;31m"
  echo "Specify a valid option."
	echo -en "\033[0m\n"
  usage
  exit 1
fi

if [ -z "${2}" ]; then
	echo -en "\033[0;31m"
	echo "Specify a user or organization."
	echo -en "\033[0m\n"
  usage
  exit 1
fi

if [[ "${1}" =~ ^\-.*|^\-\-.* ]]; then
  if [[ "${1}" =~ ^\-u$|^\-\-user$ ]]; then
    user='true'
  elif [[ "${1}" =~ ^\-o$|^\-\-org$ ]]; then
    org='true'
  else
    error='true'
  fi
else
  error='true'
fi

if [ "${error}" == 'true' ]; then
  echo -en "\033[0;31m"
  echo "${1} is not a valid option."
  echo -en "\033[0m\n"
  usage
  exit 1
fi

eval $(ssh-agent -s) >/dev/null 2>&1 && \
  ssh-add ~/.ssh/id_rsa >/dev/null 2>&1

eval $(ssh git@github.com >/dev/null 2>&1) || EXIT=$?

if [ "${EXIT}" -eq 255 ]; then
	echo -en "\033[0;31m"
	echo "Permission denied (publickey)."
	echo -en "\033[0m"
  exit 1
fi

if [ "${user}" == 'true' ]; then
  RESOURCE="users/${2}/repos"
elif [ "${org}" == 'true' ]; then
  RESOURCE="orgs/${2}/repos"
else
  exit 1
fi

# The GitHub API only returns 30 results. Therefore, increment PAGE until no
# results are returned.
PAGE=1
SSH_URLS=()
while true; do
  urls=($(curl -s "https://api.github.com/${RESOURCE}?sort=full_name&page=${PAGE}" | jq '.[].ssh_url' | tr -d \"))
  if [ ${#urls[@]} -eq 0 ]; then
    break
  else
    SSH_URLS+=("${urls[@]}")
  fi
  (( PAGE=PAGE+1 ))
done

for ssh_url in "${SSH_URLS[@]}"; do

  echo Cloning "${ssh_url}"...

  output=$(git clone "${ssh_url}" 2>&1)

  if [ $(echo "${output}" | grep -i "already exists" -c) -ne 0 ]; then
    echo -en "\033[0;31m"
    echo "Repository already exists."
    echo -en "\033[0m"
  fi

done

# Clean up ssh-agent
ssh-agent -k >/dev/null 2>&1
